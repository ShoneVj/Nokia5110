/*Nokia.cpp - Simple example in creating your own Arduino Library
 
*/
 
#include <Arduino.h>
#include "Nokia5110.h"
 
Nokia5110::Nokia5110(int rst, int ce,int dc, int din, int clk){
 pinMode(rst,OUTPUT);
 pinMode(ce,OUTPUT);
 pinMode(dc,OUTPUT);
 pinMode(din,OUTPUT);
 pinMode(clk,OUTPUT);
 RST=rst;CE=ce;DC=dc;DIN=din;CLK=clk; 
 Invert_status=false;
 
}
 
void Nokia5110::Cmd(unsigned char c){
  unsigned int i;
  digitalWrite(DC,LOW);
  digitalWrite(CE,LOW);
  for(i=0;i<8;i++){
    digitalWrite(CLK,LOW);
    if(c&0x80)
      digitalWrite(DIN,HIGH);
    else 
      digitalWrite(DIN,LOW);
    digitalWrite(CLK,HIGH);
    c <<= 1;
  }
  digitalWrite(CE,HIGH);
}
 
void Nokia5110::Data(unsigned char d){
 unsigned int i;
  digitalWrite(DC,HIGH);
  digitalWrite(CE,LOW);
  for(i=0;i<8;i++){
    digitalWrite(CLK,LOW);
    if(Invert_status==false){
    if(d&0x80)
      digitalWrite(DIN,HIGH);
    else 
      digitalWrite(DIN,LOW);}
    if(Invert_status==true){
    if(d&0x80)
      digitalWrite(DIN,LOW);
    else 
      digitalWrite(DIN,HIGH);}
    digitalWrite(CLK,HIGH);
    d <<= 1;
  }
  digitalWrite(CE,HIGH);
}

void Nokia5110::Invert(boolean inv){
  Invert_status=inv;
}


void Nokia5110::dotPixel(unsigned char x,unsigned char y){
  Cmd(0x40|(y&0x07));
  Cmd(0x80|(x&0x7f));
}

void Nokia5110::allClear(void){
  int pixel;
  dotPixel(0,0);                  
  for (pixel=504;pixel>0;pixel--) {Data(0x00);}  
}

void Nokia5110::Initialize_LCD(void)
{
  digitalWrite(RST,HIGH);  
  digitalWrite(CE,HIGH); 


  Cmd(0x21);    
  Cmd(0xb2);    
  Cmd(0x13);  
  Cmd(0x20);    
  Cmd(0x09);    
  allClear();   
  Cmd(0x08);    
  Cmd(0x0C);  
  dotPixel(0,0);    
}

void Nokia5110::setPointer(unsigned char row,unsigned char col){
  if((row>6) || (row<1) || (col<1) || (col>14))
    return;
  dotPixel(((col-1)*6),(row-1));
}

void Nokia5110::charDisp(unsigned char ch){
  unsigned char i, b;

const char LookUpTable [93][5] =
{
    { 0x00, 0x00, 0x00, 0x00, 0x00 }, 
    { 0x00, 0x00, 0x2f, 0x00, 0x00 },   
    { 0x00, 0x07, 0x00, 0x07, 0x00 },  
    { 0x14, 0x7f, 0x14, 0x7f, 0x14 },  
    { 0x24, 0x2a, 0x7f, 0x2a, 0x12 },  
    { 0xc4, 0xc8, 0x10, 0x26, 0x46 },  
    { 0x36, 0x49, 0x55, 0x22, 0x50 },   
    { 0x00, 0x05, 0x03, 0x00, 0x00 }, 
    { 0x00, 0x1c, 0x22, 0x41, 0x00 },  
    { 0x00, 0x41, 0x22, 0x1c, 0x00 },   
    { 0x14, 0x08, 0x3E, 0x08, 0x14 }, 
    { 0x08, 0x08, 0x3E, 0x08, 0x08 }, 
    { 0x00, 0x00, 0x50, 0x30, 0x00 },  
    { 0x10, 0x10, 0x10, 0x10, 0x10 },  
    { 0x00, 0x60, 0x60, 0x00, 0x00 },  
    { 0x20, 0x10, 0x08, 0x04, 0x02 },   
    { 0x3E, 0x51, 0x49, 0x45, 0x3E },   
    { 0x00, 0x42, 0x7F, 0x40, 0x00 },  
    { 0x42, 0x61, 0x51, 0x49, 0x46 },   
    { 0x21, 0x41, 0x45, 0x4B, 0x31 },   
    { 0x18, 0x14, 0x12, 0x7F, 0x10 },  
    { 0x27, 0x45, 0x45, 0x45, 0x39 },  
    { 0x3C, 0x4A, 0x49, 0x49, 0x30 },  
    { 0x01, 0x71, 0x09, 0x05, 0x03 },  
    { 0x36, 0x49, 0x49, 0x49, 0x36 }, 
    { 0x06, 0x49, 0x49, 0x29, 0x1E },   
    { 0x00, 0x36, 0x36, 0x00, 0x00 },  
    { 0x00, 0x56, 0x36, 0x00, 0x00 }, 
    { 0x08, 0x14, 0x22, 0x41, 0x00 },   
    { 0x14, 0x14, 0x14, 0x14, 0x14 },   
    { 0x00, 0x41, 0x22, 0x14, 0x08 },  
    { 0x02, 0x01, 0x51, 0x09, 0x06 },  
    { 0x32, 0x49, 0x59, 0x51, 0x3E },  
    { 0x7E, 0x11, 0x11, 0x11, 0x7E },  
    { 0x7F, 0x49, 0x49, 0x49, 0x36 },  
    { 0x3E, 0x41, 0x41, 0x41, 0x22 },   
    { 0x7F, 0x41, 0x41, 0x22, 0x1C },   
    { 0x7F, 0x49, 0x49, 0x49, 0x41 },  
    { 0x7F, 0x09, 0x09, 0x09, 0x01 },   
    { 0x3E, 0x41, 0x49, 0x49, 0x7A },   
    { 0x7F, 0x08, 0x08, 0x08, 0x7F },  
    { 0x00, 0x41, 0x7F, 0x41, 0x00 },  
    { 0x20, 0x40, 0x41, 0x3F, 0x01 },   
    { 0x7F, 0x08, 0x14, 0x22, 0x41 },   
    { 0x7F, 0x40, 0x40, 0x40, 0x40 },   
    { 0x7F, 0x02, 0x0C, 0x02, 0x7F }, 
    { 0x7F, 0x04, 0x08, 0x10, 0x7F },  
    { 0x3E, 0x41, 0x41, 0x41, 0x3E },   
    { 0x7F, 0x09, 0x09, 0x09, 0x06 },   
    { 0x3E, 0x41, 0x51, 0x21, 0x5E },  
    { 0x7F, 0x09, 0x19, 0x29, 0x46 }, 
    { 0x46, 0x49, 0x49, 0x49, 0x31 }, 
    { 0x01, 0x01, 0x7F, 0x01, 0x01 },   
    { 0x3F, 0x40, 0x40, 0x40, 0x3F },   
    { 0x1F, 0x20, 0x40, 0x20, 0x1F },   
    { 0x3F, 0x40, 0x38, 0x40, 0x3F },   
    { 0x63, 0x14, 0x08, 0x14, 0x63 },   
    { 0x07, 0x08, 0x70, 0x08, 0x07 },   
    { 0x61, 0x51, 0x49, 0x45, 0x43 },   
    { 0x00, 0x7F, 0x41, 0x41, 0x00 },  
    { 0x55, 0x2A, 0x55, 0x2A, 0x55 },   
    { 0x00, 0x41, 0x41, 0x7F, 0x00 },  
    { 0x04, 0x02, 0x01, 0x02, 0x04 },   
    { 0x40, 0x40, 0x40, 0x40, 0x40 }, 
    { 0x00, 0x01, 0x02, 0x04, 0x00 },  
    { 0x20, 0x54, 0x54, 0x54, 0x78 },  
    { 0x7F, 0x48, 0x44, 0x44, 0x38 },  
    { 0x38, 0x44, 0x44, 0x44, 0x20 },   
    { 0x38, 0x44, 0x44, 0x48, 0x7F },   
    { 0x38, 0x54, 0x54, 0x54, 0x18 },   
    { 0x08, 0x7E, 0x09, 0x01, 0x02 },  
    { 0x0C, 0x52, 0x52, 0x52, 0x3E }, 
    { 0x7F, 0x08, 0x04, 0x04, 0x78 },   
    { 0x00, 0x44, 0x7D, 0x40, 0x00 },   
    { 0x20, 0x40, 0x44, 0x3D, 0x00 },  
    { 0x7F, 0x10, 0x28, 0x44, 0x00 },  
    { 0x00, 0x41, 0x7F, 0x40, 0x00 },   
    { 0x7C, 0x04, 0x18, 0x04, 0x78 }, 
    { 0x7C, 0x08, 0x04, 0x04, 0x78 },  
    { 0x38, 0x44, 0x44, 0x44, 0x38 },   
    { 0x7C, 0x14, 0x14, 0x14, 0x08 },   
    { 0x08, 0x14, 0x14, 0x18, 0x7C },   
    { 0x7C, 0x08, 0x04, 0x04, 0x08 },   
    { 0x48, 0x54, 0x54, 0x54, 0x20 },   
    { 0x04, 0x3F, 0x44, 0x40, 0x20 },   
    { 0x3C, 0x40, 0x40, 0x20, 0x7C },   
    { 0x1C, 0x20, 0x40, 0x20, 0x1C },  
    { 0x3C, 0x40, 0x30, 0x40, 0x3C },   
    { 0x44, 0x28, 0x10, 0x28, 0x44 },  
    { 0x0C, 0x50, 0x50, 0x50, 0x3C },   
    { 0x44, 0x64, 0x54, 0x4C, 0x44 },  
    { 0x00, 0x08, 0x3e, 0x41, 0x00 }   
};




  if ( (ch < 0x20) || (ch > 0x7c) ){
    ch = 93;
  }
  for(i=0;i<5;i++){
    b = LookUpTable[ch - 32][i] << 1;
    Data(b);
  }
  Data(0x00);
}

void Nokia5110::strDisp(unsigned char *p){
  while(*p!='\0')
    charDisp(*p++);
}


void Nokia5110::logoDisp(unsigned char logo[])
{
  unsigned int i;
  
  dotPixel(0,0);
  for(i=0;i<504;i++)
  Data(logo[i]);  
}